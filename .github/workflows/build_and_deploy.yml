name: Java CI/CD with Gradle & EC2 Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Notify Discord - Success
        if: success()
        run: | # pipe is meaning block scalar indicator(or literal style) in YAML
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"\n✅ Build success \n"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord - Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"\n❌ Build failed \n🔗 https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

  deploy:
    name: Deploy to EC2 via SSM
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Trigger EC2 Deploy Script via SSM
        # commands에 사용자를 지정하지 않으면 SSM에서는 Default로 root 계정으로 명령어를 처리한다.
        run: |
          CMD="aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }} \          
            --parameters '{\"commands\":[\"sudo -u ec2-user bash /home/ec2-user/rpSample/deploy.sh\"]}' \
            --comment \"GitHub Actions deployment\" \
            --region ${{ secrets.AWS_REGION }} \
            --output text"
          eval $CMD
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
